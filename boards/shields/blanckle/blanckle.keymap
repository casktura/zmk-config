/*
 * Copyright (c) 2025 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define FUNC    3
#define NUMS    4

/ {
    conditional_layers {
        compatible="zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <NUMS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp TAB    &kp Q    &kp W    &kp E    &kp R     &kp T      &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
    &kp LCTRL  &kp A    &kp S    &kp D    &kp F     &kp G      &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
    &kp LSHIFT &kp Z    &kp X    &kp C    &kp V     &kp B      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &mt RSHIFT ENTER
    &kp ESC    &mo FUNC &kp LGUI &kp LALT &mo LOWER &kp SPACE  &trans &mo RAISE &kp RALT  &kp RGUI &kp DEL  &trans
            >;
        };

        lower_layer {
            bindings = <
    &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp MINUS &kp EQUAL &kp PIPE
    &kp GRAVE &kp N1   &kp N2 &kp N3   &kp N4   &kp N5    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp BSLH
    &trans    &trans   &trans &kp LBRC &kp LBKT &kp LPAR  &kp RPAR  &kp RBKT &kp RBRC  &kp UNDER &kp PLUS  &trans
    &trans    &trans   &trans &trans   &trans   &trans    &trans    &trans   &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5  &kp F6  &kp PG_UP    &kp PG_DN     &kp HOME &kp END   &kp INS   &kp DEL
    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp LEFT     &kp DOWN      &kp UP   &kp RIGHT &kp PSCRN &kp PAUSE_BREAK
    &trans &trans &trans &trans  &trans  &trans  &kp RC(LEFT) &kp RC(RIGHT) &trans   &trans    &trans    &kp SLCK
    &trans &trans &trans &trans  &trans  &trans  &trans       &trans        &trans   &trans    &trans    &trans
            >;
        };

        func_layer {
            bindings = <
    &kp C_VOL_UP &kp C_BRI_UP &trans &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR &bt BT_SEL 0
    &kp C_VOL_DN &kp C_BRI_DN &trans &trans &trans &trans &trans &trans &trans &trans &trans     &bt BT_SEL 1
    &kp C_MUTE   &trans       &trans &trans &trans &trans &trans &trans &trans &trans &trans     &bt BT_SEL 2
    &trans       &trans       &trans &trans &trans &trans &trans &trans &trans &trans &trans     &out OUT_TOG
            >;
        };

        nums_layer {
            bindings = <
    &trans   &trans &trans &trans &trans &trans &kp KP_ASTERISK &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &kp KP_NUM
    &kp CAPS &trans &trans &trans &trans &trans &kp KP_SLASH    &kp KP_N4 &kp KP_N5 &kp KP_N5 &kp KP_PLUS  &trans
    &trans   &trans &trans &trans &trans &trans &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT   &kp KP_ENTER
    &trans   &trans &trans &trans &trans &trans &trans          &trans    &trans    &trans    &trans       &trans
            >;
        };
    };
};
